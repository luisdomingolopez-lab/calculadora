name: Build Kivy/Buildozer APK

on:
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # --- SOLUCIÃ“N: Usamos la imagen verificada de la comunidad Kivy ---
      image: 'ghcr.io/kivy/buildozer-android:latest'
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4 
        with:
          fetch-depth: 0 
          
      - name: Create buildozer.spec
        # Recreamos el buildozer.spec con todas las correcciones
        run: |
          cat > buildozer.spec << EOF
          [app]
          title = Gestor Tasa JSON FINAL
          package.name = gestor_tasas_app_json
          package.domain = com.pcsoffice
          app.version = 1.1.25
          app.build = 87
          
          version.regex = (\d+)\.(\d+)\.(\d+)
          version.filename = buildozer.spec
          
          source.dir = .
          
          requirements = python3,kivy
          
          source.include_exts = py,png,jpg,kv,atlas,json
          source.include_dirs = tasa_data.json
          
          icon.filename = icon_app.png
          
          # La imagen Docker ya tiene estas versiones, pero las mantenemos por seguridad.
          android.api = 27
          android.minapi = 21
          android.ndk = 21e
          android.build_tools = 28.0.3 
          
          android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE
          
          log_level = 2
          
          [buildozer]
          
          log_level = 2
          warn_on_metaroot = 0
          EOF
        
      - name: Build Android APK
        # El comando 'buildozer' se ejecuta directamente dentro del contenedor funcional
        run: |
          buildozer android debug
          
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gestor-tasas-apk
          path: bin/gestor_tasas_app_json-*-debug.apk
